"""
# By submitting this assignment, I agree to the following:
#  “Aggies do not lie, cheat, or steal, or tolerate those who do”
#  “I have not given or received any unauthorized aid on this assignment”
# 
# Name: 		Erwin Luevano
# UIN:          930002548
# Section:		ENGR 102-537
# Assignment:	Lab 7b
# Date:		    16 10 2019

"""
import numpy as np
###############################################################################################################
def end(player):
	"""
	
	param: player ~ place the graph of opponent
	
	Checks to see if player has won the match
	
	"""
	a = 0 # counts pieces left
	# Loops through board checking if their are still pieces of opponents ship
	for i in player: #cbdsp
		for t in i:
			if t == 'C':
				a += 1
			elif t == 'B':
				a += 1
			elif t == 'D':
				a += 1
			elif t == 'S':
				a += 1
			elif t == 'P':
				a += 1	
	return a
###############################################################################################################		
def moves(num,coord):  
	"""
	
	param: num ~ number of game loop
	param: coord~ coordinate of attack
	
	Will attack opponents board and if players move is a hit will leave a 'X' and if a miss 'O'
	After each players turn will show players board and attack board to see if they hit their opponent and 
		how many times player has been hit 
	
	"""
	# Resets/creates variables
	player = None
	oppos = None
	yours = None
	you = None
	name = None
	if num %2==1: # if player 1 turn will use their variables
		player, oppos, yours, you, name = player_2, opponents_2, player_1, 'player 1', 'player 2' # player 2 variable
	else: # if player 2 turn will use player two variables
		player, oppos, yours, you, name = player_1, opponents_1, player_2, 'player 2', 'player 1' # player 2 vairable
	# checks if ship is there and if position has not been hit yet and then marks area as hit/miss with 'X' and 'O' in coordinate of attack
	if player[coord[0]][coord[1]] != '.' and player[coord[0]][coord[1]]!= 'O' and player[coord[0]][coord[1]] != 'X': 
		oppos[coord[0]][coord[1]] = 'X' 
		player[coord[0]][coord[1]] = 'X'
		# prints graph after attacks
		print('your attacks on',name)
		for i in oppos:
			print(*i,sep='  ')
		print(you)
		for i in yours:
			print(*i,sep='  ')
	elif player[coord[0]][coord[1]] == '.' and player[coord[0]][coord[1]] != 'O' and player[coord[0]][coord[1]] != 'X':
		player[coord[0]][coord[1]] = 'O'
		oppos[coord[0]][coord[1]] = 'O'
		# prints graph after attacks
		print('your attacks on',name)
		for i in oppos:
			print(*i,sep='  ')
		print(you)
		for i in yours:
			print(*i,sep='  ')
	# if the spot has been hit then user is able to enter coordinates till they are accepted
	else:
		return False
	
###############################################################################################################
# Creates Carrier ship of 5 spaces in direction the user chooses
def carrier(num,coordinate,direction):
	"""
	param: num ~ identifies player turn
	param: coordinate ~ place to place their piece
	param: direction ~ the direction of the rest of ship
	
	will find which players turn it is with num and place their ship in the direction and location 
		 of their choosing 
	
	"""
	if num == 1:
		player = player_1
	elif num == 2:
		player = player_2
	player[coordinate[0]][coordinate[1]] = 'C'
	if direction == 'l':
		for i in range(1,5):
			player[coordinate[0]][coordinate[1]-i] = 'C'
	elif direction == 'r':
		for i in range(1,5):
			player[coordinate[0]][coordinate[1]+i] = 'C'
	elif direction == 'd':
		for i in range(1,5):
			player[coordinate[0]+i][coordinate[1]] = 'C'
	elif direction == 'u':
		for i in range(1,5):
			player[coordinate[0]-i][coordinate[1]] = 'C'
###############################################################################################################
# Creates Battleship ship of 4 spaces in direction the user chooses
def battleship(num,coordinate,direction):
	"""
	param: num ~ identifies player turn
	param: coordinate ~ place to place their piece
	param: direction ~ the direction of the rest of ship
	
	will find which players turn it is with num and place their ship in the direction and location 
		 of their choosing 
	
	"""
	if num == 1:
		player = player_1
	elif num == 2:
		player = player_2
	player[coordinate[0]][coordinate[1]] = 'B'
	if direction == 'l':
		for i in range(1,4):
			player[coordinate[0]][coordinate[1]-i] = 'B'
	elif direction == 'r':
		for i in range(1,4):
			player[coordinate[0]][coordinate[1]+i] = 'B'
	elif direction == 'd':
		for i in range(1,4):
			player[coordinate[0]+i][coordinate[1]] = 'B'
	elif direction == 'u':
		for i in range(1,4):
			player[coordinate[0]-i][coordinate[1]] = 'B'
###############################################################################################################
# Creates Destroyer ship of 3 spaces in direction the user chooses
def destroyer(num,coordinate,direction):
	"""
	param: num ~ identifies player turn
	param: coordinate ~ place to place their piece
	param: direction ~ the direction of the rest of ship
	
	will find which players turn it is with num and place their ship in the direction and location 
		 of their choosing 
	
	"""
	if num == 1:
		player = player_1
	elif num == 2:
		player = player_2
	player[coordinate[0]][coordinate[1]] = 'D'
	if direction == 'l':
		for i in range(1,3):
			player[coordinate[0]][coordinate[1]-i] = 'D'
	elif direction == 'r':
		for i in range(1,3):
			player[coordinate[0]][coordinate[1]+i] = 'D'
	elif direction == 'd':
		for i in range(1,3):
			player[coordinate[0]+i][coordinate[1]] = 'D'
	elif direction == 'u':
		for i in range(1,3):
			player[coordinate[0]-i][coordinate[1]] = 'D'
###############################################################################################################
# Creates submarine ship of 3 spaces in direction the user chooses
def submarine(num,coordinate,direction):
	"""
	param: num ~ identifies player turn
	param: coordinate ~ place to place their piece
	param: direction ~ the direction of the rest of ship
	
	will find which players turn it is with num and place their ship in the direction and location 
		 of their choosing 
	
	"""
	if num == 1:
		player = player_1
	elif num == 2:
		player = player_2
	player[coordinate[0]][coordinate[1]] = 'S'
	if direction == 'l':
		for i in range(1,3):
			player[coordinate[0]][coordinate[1]-i] = 'S'
	elif direction == 'r':
		for i in range(1,3):
			player[coordinate[0]][coordinate[1]+i] = 'S'
	elif direction == 'd':
		for i in range(1,3):
			player[coordinate[0]+i][coordinate[1]] = 'S'
	elif direction == 'u':
		for i in range(1,3):
			player[coordinate[0]-i][coordinate[1]] = 'S'
###############################################################################################################
# Creates Patrol Boat ship of 2 spaces in direction the user chooses
def patrol_boat(num,coordinate,direction):
	"""
	param: num ~ identifies player turn
	param: coordinate ~ place to place their piece
	param: direction ~ the direction of the rest of ship
	
	will find which players turn it is with num and place their ship in the direction and location 
		 of their choosing 
	
	"""
	if num == 1:
		player = player_1
	elif num == 2:
		player = player_2
	player[coordinate[0]][coordinate[1]] = 'P'
	if direction == 'l':
		player[coordinate[0]][coordinate[1]-1] = 'P'
	elif direction == 'r':
		player[coordinate[0]][coordinate[1]+1] = 'P'
	elif direction == 'd':
		player[coordinate[0]+1][coordinate[1]] = 'P'
	elif direction == 'u':
		player[coordinate[0]-1][coordinate[1]] = 'P'



	
for num in range(1,203): # loops through game until someone wins or all spaces have been used 
###############################################################################################################
	if num ==1 : # player 1 board 
		opponents_2 =[['.','.','.','.','.','.','.','.','.','.'],
	               ['.','.','.','.','.','.','.','.','.','.'],
	               ['.','.','.','.','.','.','.','.','.','.'],
	               ['.','.','.','.','.','.','.','.','.','.'],
	               ['.','.','.','.','.','.','.','.','.','.'],
	               ['.','.','.','.','.','.','.','.','.','.'],
	               ['.','.','.','.','.','.','.','.','.','.'],
	               ['.','.','.','.','.','.','.','.','.','.'],
	               ['.','.','.','.','.','.','.','.','.','.'],
			       ['.','.','.','.','.','.','.','.','.','.']]
		
		print('player 2')
		player_1 = [['.','.','.','.','.','.','.','.','.','.'],
                   ['.','.','.','.','.','.','.','.','.','.'],
                   ['.','.','.','.','.','.','.','.','.','.'],
			       ['.','.','.','.','.','.','.','.','.','.'],
                   ['.','.','.','.','.','.','.','.','.','.'],
                   ['.','.','.','.','.','.','.','.','.','.'],
                   ['.','.','.','.','.','.','.','.','.','.'],
                   ['.','.','.','.','.','.','.','.','.','.'],
                   ['.','.','.','.','.','.','.','.','.','.'],
		           ['.','.','.','.','.','.','.','.','.','.']]
		
		for i in opponents_2: #prints out layout of board 
			print(*i, sep ='  ')
		print('player 1')
		for i in player_1:
			print(*i, sep = '  ')		
		

		# player sets up their board by placing their ships
		coordinate = np.array(input('Enter the coordinate Ex:(1,2): ').split(','),dtype = int)-1
		direction = input('Enter the direction of your piece: ')
		carrier(num,coordinate,direction)
		coordinate = np.array(input('Enter the coordinate Ex:(1,2): ').split(','),dtype = int)-1
		direction = input('Enter the direction of your piece choices(u,d,l,r): ')
		battleship(num,coordinate,direction)
		coordinate = np.array(input('Enter the coordinate Ex:(1,2): ').split(','),dtype = int)-1
		direction = input('Enter the direction of your piece: ')
		destroyer(num,coordinate,direction)
		coordinate = np.array(input('Enter the coordinate Ex:(1,2): ').split(','),dtype = int)-1
		direction = input('Enter the direction of your piece: ')
		patrol_boat(num,coordinate,direction)
		coordinate = np.array(input('Enter the coordinate Ex:(1,2): ').split(','),dtype = int)-1
		direction = input('Enter the direction of your piece: ')
		submarine(num,coordinate,direction)
		# prints players board to see their finished result
		print('Your attack board')
		for i in opponents_2:
			print(*i,sep='  ')
		print('Player 1')
		for i in player_1:
			print(*i,sep= '  ')
		# does not move on until user is ready
		switch = input('If you have swtiched say yes:')
		print(10*'\n')
###############################################################################################################
	elif num == 2:
		opponents_1 =[['.','.','.','.','.','.','.','.','.','.'],
                     ['.','.','.','.','.','.','.','.','.','.'],
                     ['.','.','.','.','.','.','.','.','.','.'],
			         ['.','.','.','.','.','.','.','.','.','.'],
                     ['.','.','.','.','.','.','.','.','.','.'],
                     ['.','.','.','.','.','.','.','.','.','.'],
                     ['.','.','.','.','.','.','.','.','.','.'],
                     ['.','.','.','.','.','.','.','.','.','.'],
                     ['.','.','.','.','.','.','.','.','.','.'],
		             ['.','.','.','.','.','.','.','.','.','.']]
		
		print('player 1')
		player_2 = [['.','.','.','.','.','.','.','.','.','.'],
		           ['.','.','.','.','.','.','.','.','.','.'],
                   ['.','.','.','.','.','.','.','.','.','.'],
			       ['.','.','.','.','.','.','.','.','.','.'],
                   ['.','.','.','.','.','.','.','.','.','.'],
                   ['.','.','.','.','.','.','.','.','.','.'],
                   ['.','.','.','.','.','.','.','.','.','.'],
                   ['.','.','.','.','.','.','.','.','.','.'],
                   ['.','.','.','.','.','.','.','.','.','.'],
				   ['.','.','.','.','.','.','.','.','.','.']]
		
		for i in opponents_1: #prints out layout of game board before every move
			print(*i, sep ='  ')
		print('player 2')
		for i in player_2:
			print(*i, sep = '  ')		

		# thinking of printing out the graph everytime so the person sees where they placed their ships
		# or would it be too much printing????????
		coordinate = np.array(input('Enter the coordinate Ex:(1,2): ').split(','),dtype = int)-1
		direction = input('Enter the direction of your piece: ')
		carrier(num,coordinate,direction) 
		coordinate = np.array(input('Enter the coordinate Ex:(1,2): ').split(','),dtype = int)-1
		direction = input('Enter the direction of your piece choices(u,d,l,r): ')
		battleship(num,coordinate,direction)
		coordinate = np.array(input('Enter the coordinate Ex:(1,2): ').split(','),dtype = int)-1
		direction = input('Enter the direction of your piece choices(u,d,l,r): ')
		destroyer(num,coordinate,direction)
		coordinate = np.array(input('Enter the coordinate Ex:(1,2): ').split(','),dtype = int)-1
		direction = input('Enter the direction of your piece choices(u,d,l,r): ')
		patrol_boat(num,coordinate,direction)
		coordinate = np.array(input('Enter the coordinate Ex:(1,2): ').split(','),dtype = int)-1
		direction = input('Enter the direction of your piece choices(u,d,l,r): ')
		submarine(num,coordinate,direction)
		print('player 1')
		for i in opponents_1:
			print(*i,sep='  ')
		print('Player_2')
		for i in player_2:
			print(*i,sep='  ')
		# does not move on till user is ready
		switch = input('If you have swtiched say yes:')
		print(10*'\n')
###############################################################################################################	
	# Player 1 turn to attack		
	elif num != 1 and num %2==1:
		print('your attacks on player 2')
		for i in opponents_2:
			print(*i,sep='  ')
		print('player 1')
		for i in player_1:
			print(*i,sep='  ')
		print('Player 1 it is your turn!')
		coord = np.array(input('Enter the coordinates of your attack Ex:(1,2): ').split(','),dtype = int)-1
		l = moves(num,coord)   
		# loops until acceptable attack is entered
		while l == False:
			print('You already hit there! Look at your hit sheet and choose another area.')
			coord = np.array(input('Enter the coordinates of your attack Ex:(1,2): ').split(','),dtype = int)-1
			l = moves(num,coord)
		# checks if player 1 has won
		if end(player_2) == 0:
			print('you won the game!!!')
			break
		# allows user to see board after attack
		user = input('See if you hit or missed and press enter for player twos turn!')
		print(10*'\n')
###############################################################################################################		
	# player 2 turn to attack
	elif num !=2 and num %2==0:	
		print('your attacks on player 1')
		for i in opponents_1:
			print(*i,sep='  ')
		print('player 2')
		for i in player_2:
			print(*i,sep='  ')
		print('Player 2 it is your turn!')
		coord = np.array(input('Enter the coordinates of your attack Ex:(1,2): ').split(','),dtype = int)-1
		l = moves(num,coord) 
		# loops until acceptable attack is entered  
		while l == False:
			print('You already hit there! Look at your hit sheet and choose another area.')
			coord = np.array(input('Enter the coordinates of your attack Ex:(1,2): ').split(','),dtype = int)-1
			l = moves(num,coord)
		# checks if player 2 has won
		if end(player_1) == 0:
			print('You won the game!!!')
			break
		# allows user to see board after attack
		user = input('See if you hit or missed and press enter for player ones turn!')
		print(10*'\n')
		
